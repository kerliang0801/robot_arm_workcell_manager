# Created by: YouLiang
# Date: Dec 2018
# Description: Motion Descriptor for UR10 motion control
#
# * Type: Joint goal and pose goal -> Absolute value
#         Cartesian planning -> Relative position
# * TimeFactor: Duration of motion increases (speed decreases) when factor inceases
#
# rest2 -> cabinet ->bev machine -> robot -> rest2
# G1 -> G9 -> G10 -> G7 -> G6 
#############################################################


arm_id: ur10_001
tolerance: 0.001  # TODO: currently not in used
enable_gripper: False
log_motion_error: True # named as: `error_log.txt`
fix_laser_pose: [-0.05, 0.0, 0.0]  # respect to base_link, # [0.15,0,0], TODO: now also use for recalib from target, should use proper tf
skip_dynamic_cartesian: False

# Group of Motions for execution in sequence
motion_group:
  - { id: G1, sequence: [M3, M4] } # move to rest 1 then 2
  - { id: G9, sequence: [M9, M10]}  # from rest 2 to rest 3  then "Cup Pick-up area"
  - { id: G10, sequence: [M11, -M10, M6, M8, M5]}  # "Cup Pick-up area" to beverage machine
  # Compartment
  - { id: G7, sequence: [-M5, M6, M4, M3, M20, M70]}  # bev mach to payload left
  - { id: G8, sequence: [-M5, M6, M4, M3, M20, M71]}  # bev mach to payload right
  # Back to origin
  - { id: G6, sequence: [M72, M3, M4] } # payload to bck to rest 2
  - { id: G2, sequence: [-M5, M4] } # null, directly to rest 2

  # dynamic position testing
  # - { id: G98, sequence: [M4, M3]} # tobe removed
  # - { id: G99, sequence: [M20, M70, M2]} # tobe removed
  # - { id: G66, sequence: [M2, M71, M3] } # tobe removed


# Specific Motion
motion:
  M1: { type: eef_grip_obj }
  M2: { type: eef_release_obj }
  M3: { type: joint_goal, data: [-0.098,-1.761,2.141,-0.321,1.487,-0.786], timeFactor: 2 }   #Rest1: (lower, payload height)
  M4: { type: joint_goal, data: [0, -2.107, 1.795, 0.354, 1.571, -0.785], timeFactor: 2 } #Rest 2 (higher)
  M5: { type: cartesian, sequence: [C2], timeFactor: 2 }
  M70: { type: cartesian, sequence: [C8, C9], timeFactor: 2 }  # left payload
  M71: { type: cartesian, sequence: [C7, C10], timeFactor: 2 }  # right payload
  M72: { type: cartesian, sequence: [-C9], timeFactor: 2 }
  M6: { type: joint_goal, data: [1.550,-2.027,2.079,-0.062,1.614,-0.772], timeFactor: 3 }  #Intermediate point from pick to BM
  M8: { type: joint_goal, data: [2.157,-1.289,1.935,-0.694,2.255,-0.775], timeFactor: 2 } #Rest 3 (before entering beverage machine)
  M9: { type: joint_goal, data: [1.179,-1.639,2.402,-0.754,1.300,-0.787], timeFactor: 3 } #Rest3, to position cup rack
  M10: { type: cartesian, sequence: [C5], timeFactor: 2 } # y-axis moves in
  M11: { type: cartesian, sequence: [C4], timeFactor: 2 } #lifting up cup
 
  # Based out of pose estimation topic, absolute [x, y, theta]
  ## @target: expected position of the eef; @tolerance: allowance for adjustment
  M20: { type: 2d_dynamic_cartesian, target: [0.52, 0.13, 0.0] , tolerance: [0.5, 0.5, 0.1], timeFactor: 2 } 


# Cartesian Motion, in `xyzrpy`
cartesian_motion:
  C1: [ 0, 0, -0.15, 0, 0, 0]
  C2: [ 0, 0.22, 0, 0, 0, 0]  #45degree yaw
  C3: [ 0.12, 0.12, 0, 0, 0, 0]
  C4: [ 0, 0, 0.06, 0, 0, 0]   #lifting up cup
  C5: [ 0, 0.26, -0.025, 0, 0, 0]  #insert to cup rack
  #left
  C8: [ 0, -0.18, 0, 0, 0, 0]
  C9: [ 0.36, 0, -0.045, 0, 0, 0]
  #right
  C7: [ 0, 0.20, 0, 0, 0, 0]
  C10: [0.36,0,-0.045,0,0,-0.45] # yaw turn for delivery compartment
